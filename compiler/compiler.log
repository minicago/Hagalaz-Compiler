2
Starting the compiler?
CompUnitNode
FuncDefNode: type=291, id=f
Parameters:
ParamListNode
ParamNode: type=291, id=a, isptr=0
Body:
BlockGroupNode
IfElseNode
ExprNode: op=263
LvalNode: id=a
ConstIntNode: val=1
If branch:
ReturnNode
ConstIntNode: val=1
IfElseNode
ExprNode: op=263
LvalNode: id=a
ConstIntNode: val=2
If branch:
ReturnNode
ConstIntNode: val=1
ReturnNode
ExprNode: op=265
FuncCallNode: id=f
FuncCallParamNode
ExprNode: op=266
LvalNode: id=a
ConstIntNode: val=1
FuncCallNode: id=f
FuncCallParamNode
ExprNode: op=266
LvalNode: id=a
ConstIntNode: val=2
FuncDefNode: type=291, id=main
Body:
BlockGroupNode
ReturnNode
FuncCallNode: id=f
FuncCallParamNode
ConstIntNode: val=5
Visiting CompUnitNode
Visiting FuncDefNode
Function definition: f
Visiting ParamListNode
Visiting ParamNode
Finished visiting ParamNode
Finished visiting ParamListNode
Visiting BlockGroupNode
Visiting IfElseNode
Visiting LvalNode
int
Finished visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Finished visiting ExprNode
Visiting ReturnNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Matching types: const int and int
Finished visiting ReturnNode
Finished visiting IfElseNode
Visiting IfElseNode
Visiting LvalNode
int
Finished visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Finished visiting ExprNode
Visiting ReturnNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Matching types: const int and int
Finished visiting ReturnNode
Finished visiting IfElseNode
Visiting ReturnNode
Visiting FuncCallNode
Visiting FuncCallParamNode
Visiting LvalNode
int
Finished visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Finished visiting ExprNode
Finished visiting FuncCallParamNode
Matching types: int and int
Finished visiting FuncCallNode
Visiting FuncCallNode
Visiting FuncCallParamNode
Visiting LvalNode
int
Finished visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Finished visiting ExprNode
Finished visiting FuncCallParamNode
Matching types: int and int
Finished visiting FuncCallNode
Finished visiting ExprNode
Matching types: int and int
Finished visiting ReturnNode
Finished visiting BlockGroupNode
Finished visiting FuncDefNode
Visiting FuncDefNode
Function definition: main
Visiting BlockGroupNode
Visiting ReturnNode
Visiting FuncCallNode
Visiting FuncCallParamNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Finished visiting FuncCallParamNode
Matching types: int and const int
Finished visiting FuncCallNode
Matching types: int and int
Finished visiting ReturnNode
Finished visiting BlockGroupNode
Finished visiting FuncDefNode
Finished visiting CompUnitNode
IRBuilder toString
()
f
($0,)
load $0 -> $2
eq $2, 1 -> $3
if $3 goto $4
goto $5
label $4
return 1
label $5
load $0 -> $6
eq $6, 2 -> $7
if $7 goto $8
goto $9
label $8
return 1
label $9
load $0 -> $10
sub $10, 1 -> $11
call f($11, ) -> $12
load $0 -> $13
sub $13, 2 -> $14
call f($14, ) -> $15
add $12, $15 -> $16
return $16
malloc 4 -> $0

main
()
call f(5, ) -> $18
return $18


Building LIR
Finished building global variables
Building2: load $0 -> $2
Building2: eq $2, 1 -> $3
Building2: if $3 goto $4
Building2: goto $5
Building2: label $4
Building2: return 1
Building2: label $5
Building2: load $0 -> $6
Building2: eq $6, 2 -> $7
Building2: if $7 goto $8
Building2: goto $9
Building2: label $8
Building2: return 1
Building2: label $9
Building2: load $0 -> $10
Building2: sub $10, 1 -> $11
Building2: call f($11, ) -> $12
Building2: load $0 -> $13
Building2: sub $13, 2 -> $14
Building2: call f($14, ) -> $15
Building2: add $12, $15 -> $16
Building2: return $16
Building2: call f(5, ) -> $18
Building2: return $18
Finished building LIR
