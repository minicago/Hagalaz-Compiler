1
Starting the compiler?
CompUnitNode
FuncDefNode: type=291, id=main
Body:
BlockGroupNode
DeclNode: isConst=0, type=291, id=a
Array size:
VectorNode
ConstIntNode: val=4
ConstIntNode: val=2
Initial value:
VectorNode
VectorNode
ConstIntNode: val=1
ConstIntNode: val=2
VectorNode
ConstIntNode: val=3
ConstIntNode: val=4
VectorNode
ConstIntNode: val=7
DeclNode: isConst=1, type=291, id=N
Initial value:
ConstIntNode: val=3
DeclNode: isConst=0, type=291, id=b
Array size:
VectorNode
ConstIntNode: val=4
ConstIntNode: val=2
Initial value:
VectorNode
DeclNode: isConst=0, type=291, id=c
Array size:
VectorNode
ConstIntNode: val=4
ConstIntNode: val=2
Initial value:
VectorNode
ConstIntNode: val=1
ConstIntNode: val=2
ConstIntNode: val=3
ConstIntNode: val=4
ConstIntNode: val=5
ConstIntNode: val=6
ConstIntNode: val=7
ConstIntNode: val=8
DeclNode: isConst=0, type=291, id=d
Array size:
VectorNode
ExprNode: op=265
LvalNode: id=N
ConstIntNode: val=1
ConstIntNode: val=2
Initial value:
VectorNode
ConstIntNode: val=1
ConstIntNode: val=2
VectorNode
ConstIntNode: val=3
VectorNode
ConstIntNode: val=5
LvalNode: id=a
VectorNode
ConstIntNode: val=3
ConstIntNode: val=0
ConstIntNode: val=8
DeclNode: isConst=0, type=291, id=e
Array size:
VectorNode
ConstIntNode: val=4
ConstIntNode: val=2
ConstIntNode: val=1
Initial value:
VectorNode
VectorNode
LvalNode: id=d
VectorNode
ConstIntNode: val=2
ConstIntNode: val=1
VectorNode
LvalNode: id=c
VectorNode
ConstIntNode: val=2
ConstIntNode: val=1
VectorNode
ConstIntNode: val=3
ConstIntNode: val=4
VectorNode
ConstIntNode: val=5
ConstIntNode: val=6
VectorNode
ConstIntNode: val=7
ConstIntNode: val=8
ReturnNode
ExprNode: op=265
ExprNode: op=265
ExprNode: op=265
LvalNode: id=e
VectorNode
ConstIntNode: val=3
ConstIntNode: val=1
ConstIntNode: val=0
LvalNode: id=e
VectorNode
ConstIntNode: val=0
ConstIntNode: val=0
ConstIntNode: val=0
LvalNode: id=e
VectorNode
ConstIntNode: val=0
ConstIntNode: val=1
ConstIntNode: val=0
LvalNode: id=d
VectorNode
ConstIntNode: val=3
ConstIntNode: val=0
Visiting CompUnitNode
Visiting FuncDefNode
Function definition: main
Visiting BlockGroupNode
Visiting DeclNode
Visiting vectorNode
Constructing type: int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Constructing type: [2]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Constructing type: [4][2]int
Finished visiting vectorNode
type [4][2]int
Visiting vectorNode
Visiting vectorNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Finished visiting vectorNode
Visiting vectorNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Finished visiting vectorNode
Visiting vectorNode
Finished visiting vectorNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Finished visiting vectorNode
Finished visiting DeclNode
Visiting DeclNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Matching types: const int and const int
Finished visiting DeclNode
Visiting DeclNode
Visiting vectorNode
Constructing type: int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Constructing type: [2]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Constructing type: [4][2]int
Finished visiting vectorNode
type [4][2]int
Visiting vectorNode
Finished visiting vectorNode
Finished visiting DeclNode
Visiting DeclNode
Visiting vectorNode
Constructing type: int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Constructing type: [2]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Constructing type: [4][2]int
Finished visiting vectorNode
type [4][2]int
Visiting vectorNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Finished visiting vectorNode
Finished visiting DeclNode
Visiting DeclNode
Visiting vectorNode
Constructing type: int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Constructing type: [2]int
0
Visiting LvalNode
1 0
const int = 3
Finished visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Finished visiting ExprNode
Element type: const int
Constructing type: [4][2]int
Finished visiting vectorNode
type [4][2]int
Visiting vectorNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting vectorNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Finished visiting vectorNode
Visiting vectorNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Finished visiting vectorNode
0
Visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[4][2]int
get_index
index: 3
type: 0
[2]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[2]int
get_index
index: 0
type: 0
int
0 0
int
Finished visiting LvalNode
Element type: int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Finished visiting vectorNode
Finished visiting DeclNode
Visiting DeclNode
Visiting vectorNode
Constructing type: int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Constructing type: [1]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Constructing type: [2][1]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Constructing type: [4][2][1]int
Finished visiting vectorNode
type [4][2][1]int
Visiting vectorNode
Visiting vectorNode
0
Visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[4][2]int
get_index
index: 2
type: 0
[2]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[2]int
get_index
index: 1
type: 0
int
0 0
int
Finished visiting LvalNode
Element type: int
Visiting vectorNode
0
Visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[4][2]int
get_index
index: 2
type: 0
[2]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[2]int
get_index
index: 1
type: 0
int
0 0
int
Finished visiting LvalNode
Element type: int
Finished visiting vectorNode
Finished visiting vectorNode
Visiting vectorNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Finished visiting vectorNode
Visiting vectorNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Finished visiting vectorNode
Visiting vectorNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Visiting ConstIntNode
Finished visiting ConstIntNode
Element type: const int
Finished visiting vectorNode
Finished visiting vectorNode
Finished visiting DeclNode
Visiting ReturnNode
0
Visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[4][2][1]int
get_index
index: 3
type: 0
[2][1]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[2][1]int
get_index
index: 1
type: 0
[1]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[1]int
get_index
index: 0
type: 0
int
0 0
int
Finished visiting LvalNode
0
Visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[4][2][1]int
get_index
index: 0
type: 0
[2][1]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[2][1]int
get_index
index: 0
type: 0
[1]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[1]int
get_index
index: 0
type: 0
int
0 0
int
Finished visiting LvalNode
Finished visiting ExprNode
0
Visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[4][2][1]int
get_index
index: 0
type: 0
[2][1]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[2][1]int
get_index
index: 1
type: 0
[1]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[1]int
get_index
index: 0
type: 0
int
0 0
int
Finished visiting LvalNode
Finished visiting ExprNode
0
Visiting LvalNode
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[4][2]int
get_index
index: 3
type: 0
[2]int
Visiting ConstIntNode
Finished visiting ConstIntNode
Array is constant.
[2]int
get_index
index: 0
type: 0
int
0 0
int
Finished visiting LvalNode
Finished visiting ExprNode
Matching types: int and int
Finished visiting ReturnNode
Finished visiting BlockGroupNode
Finished visiting FuncDefNode
Finished visiting CompUnitNode
IRBuilder toString
malloc 32 -> $5
add $5, 0 -> $6
store 1 -> $6
add $5, 4 -> $7
store 2 -> $7
add $5, 0 -> $8
store 3 -> $8
add $5, 4 -> $9
store 4 -> $9
add $5, 0 -> $10
store 7 -> $10
malloc 4 -> $11
store 3 -> $11
malloc 32 -> $12
malloc 32 -> $13
add $13, 0 -> $14
store 1 -> $14
add $13, 4 -> $15
store 2 -> $15
add $13, 8 -> $16
store 3 -> $16
add $13, 12 -> $17
store 4 -> $17
add $13, 16 -> $18
store 5 -> $18
add $13, 20 -> $19
store 6 -> $19
add $13, 24 -> $20
store 7 -> $20
add $13, 28 -> $21
store 8 -> $21
malloc 32 -> $22
add $22, 0 -> $23
store 1 -> $23
add $22, 4 -> $24
store 2 -> $24
add $22, 0 -> $25
store 3 -> $25
add $22, 0 -> $26
store 5 -> $26
add 24, $5 -> $29
load $29 -> $30
add $22, 0 -> $31
store $30 -> $31
add $22, 4 -> $32
store 8 -> $32
malloc 32 -> $33
add 20, $22 -> $36
load $36 -> $37
add $33, 0 -> $38
store $37 -> $38
add 20, $13 -> $41
load $41 -> $42
add $33, 0 -> $43
store $42 -> $43
add $33, 0 -> $44
store 3 -> $44
add $33, 4 -> $45
store 4 -> $45
add $33, 0 -> $46
store 5 -> $46
add $33, 4 -> $47
store 6 -> $47
add $33, 0 -> $48
store 7 -> $48
add $33, 4 -> $49
store 8 -> $49
add 28, $33 -> $53
load $53 -> $54
add 0, $33 -> $58
load $58 -> $59
add $54, $59 -> $60
add 4, $33 -> $64
load $64 -> $65
add $60, $65 -> $66
add 24, $22 -> $69
load $69 -> $70
add $66, $70 -> $71
return $71
()
main
()
malloc 32 -> $5
add $5, 0 -> $6
store 1 -> $6
add $5, 4 -> $7
store 2 -> $7
add $5, 0 -> $8
store 3 -> $8
add $5, 4 -> $9
store 4 -> $9
add $5, 0 -> $10
store 7 -> $10
malloc 4 -> $11
store 3 -> $11
malloc 32 -> $12
malloc 32 -> $13
add $13, 0 -> $14
store 1 -> $14
add $13, 4 -> $15
store 2 -> $15
add $13, 8 -> $16
store 3 -> $16
add $13, 12 -> $17
store 4 -> $17
add $13, 16 -> $18
store 5 -> $18
add $13, 20 -> $19
store 6 -> $19
add $13, 24 -> $20
store 7 -> $20
add $13, 28 -> $21
store 8 -> $21
malloc 32 -> $22
add $22, 0 -> $23
store 1 -> $23
add $22, 4 -> $24
store 2 -> $24
add $22, 0 -> $25
store 3 -> $25
add $22, 0 -> $26
store 5 -> $26
add 24, $5 -> $29
load $29 -> $30
add $22, 0 -> $31
store $30 -> $31
add $22, 4 -> $32
store 8 -> $32
malloc 32 -> $33
add 20, $22 -> $36
load $36 -> $37
add $33, 0 -> $38
store $37 -> $38
add 20, $13 -> $41
load $41 -> $42
add $33, 0 -> $43
store $42 -> $43
add $33, 0 -> $44
store 3 -> $44
add $33, 4 -> $45
store 4 -> $45
add $33, 0 -> $46
store 5 -> $46
add $33, 4 -> $47
store 6 -> $47
add $33, 0 -> $48
store 7 -> $48
add $33, 4 -> $49
store 8 -> $49
add 28, $33 -> $53
load $53 -> $54
add 0, $33 -> $58
load $58 -> $59
add $54, $59 -> $60
add 4, $33 -> $64
load $64 -> $65
add $60, $65 -> $66
add 24, $22 -> $69
load $69 -> $70
add $66, $70 -> $71
return $71


Building LIR
Finished building global variables
Building2: add $5, 0 -> $6
Building2: store 1 -> $6
Building2: add $5, 4 -> $7
Building2: store 2 -> $7
Building2: add $5, 0 -> $8
Building2: store 3 -> $8
Building2: add $5, 4 -> $9
Building2: store 4 -> $9
Building2: add $5, 0 -> $10
Building2: store 7 -> $10
Building2: store 3 -> $11
Building2: add $13, 0 -> $14
Building2: store 1 -> $14
Building2: add $13, 4 -> $15
Building2: store 2 -> $15
Building2: add $13, 8 -> $16
Building2: store 3 -> $16
Building2: add $13, 12 -> $17
Building2: store 4 -> $17
Building2: add $13, 16 -> $18
Building2: store 5 -> $18
Building2: add $13, 20 -> $19
Building2: store 6 -> $19
Building2: add $13, 24 -> $20
Building2: store 7 -> $20
Building2: add $13, 28 -> $21
Building2: store 8 -> $21
Building2: add $22, 0 -> $23
Building2: store 1 -> $23
Building2: add $22, 4 -> $24
Building2: store 2 -> $24
Building2: add $22, 0 -> $25
Building2: store 3 -> $25
Building2: add $22, 0 -> $26
Building2: store 5 -> $26
Building2: add 24, $5 -> $29
Building2: load $29 -> $30
Building2: add $22, 0 -> $31
Building2: store $30 -> $31
Building2: add $22, 4 -> $32
Building2: store 8 -> $32
Building2: add 20, $22 -> $36
Building2: load $36 -> $37
Building2: add $33, 0 -> $38
Building2: store $37 -> $38
Building2: add 20, $13 -> $41
Building2: load $41 -> $42
Building2: add $33, 0 -> $43
Building2: store $42 -> $43
Building2: add $33, 0 -> $44
Building2: store 3 -> $44
Building2: add $33, 4 -> $45
Building2: store 4 -> $45
Building2: add $33, 0 -> $46
Building2: store 5 -> $46
Building2: add $33, 4 -> $47
Building2: store 6 -> $47
Building2: add $33, 0 -> $48
Building2: store 7 -> $48
Building2: add $33, 4 -> $49
Building2: store 8 -> $49
Building2: add 28, $33 -> $53
Building2: load $53 -> $54
Building2: add 0, $33 -> $58
Building2: load $58 -> $59
Building2: add $54, $59 -> $60
Building2: add 4, $33 -> $64
Building2: load $64 -> $65
Building2: add $60, $65 -> $66
Building2: add 24, $22 -> $69
Building2: load $69 -> $70
Building2: add $66, $70 -> $71
Building2: return $71
Finished building LIR
